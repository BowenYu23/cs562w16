                                                     CS-562 Project Proposal
Akshay Salvi
CS-562
Student ID: 932-705-076

Library under test:

In this project I plan to use TSTL to test the python libraries of “binary_search_tree.py” and
“singly_linked_list.py” which are the python files for Binary Search Trees and Linked List respectively.
These python files were obtained from the GitHub repository. The link of the files is as given below

Binary Search: https://github.com/nryoung/algorithms/blob/master/algorithms/data_structures/binary_search_tree.py
Linked List: https://github.com/nryoung/algorithms/blob/master/algorithms/data_structures/singly_linked_list.py

Possible test cases on the libraries:

Binary Search Trees: A binary search tree is a tree in which the data stored at each node has a distinguished key which is unique in the tree.
Each node in a Binary Search Tree has exactly 2 children, except for the leaf node and the key values of any node is greater
than all keys occurring in its left sub tree and less than all the key values occurring in its right sub tree.
Insert, search, remove are some of the common operations performed on the Binary Search Tree. 
In this project I will perform the below tests:- 
->	Access the uniqueness of a key inside the Binary Search Tree i.e. accessing if the tree accepts and maintains duplicate values.
->	How the library handles when a non existing key is tried to delete.
->	Check whether the node on the left hand side of a key is less and the key on the right hand side is greater. 
->	I will be testing the traversal patterns of a Binary Search tree which are preorder,
         postorder and inorder and check whether after insertion,deletion does the function give out correct inorder,preorder and postorder patterns.
->	Examine the behavior of the library when an unknown/incorrect input is given to the tree.  
->	When a deletion is performed on a particular key in the tree, does the tree remain adhered to the standard properties of a Binary Search tree? 
->  What happens when a deletion, searching operation is performed on an empty Binary Search Tree?

Linked List: A linked list is a dynamic data structure in which the number of nodes in a list is not fixed and can grow and shrink on demand.
Applications which have to deal with unknown number of data items would preferably use a linked list. Below is the list of tests that I will perform on a linked list:
->	Test whether after deletion of a particular node in the middle of linked list ,do the elements on the list maintain their structure in the linked list.
->	How the library handles when a wrong data type input is provided to the linked list.
->	Since the source library files do not have implementations for adding and deletion of elements on the rear of a linked list,
         I intend to provide that functionality myself and test the working of the same.
->	Test whether insertion, deletion, searching and the size functions produce correct results.


References:
https://en.wikipedia.org/wiki/Binary_search_tree
https://www.cs.cmu.edu/~adamchik/15-121/lectures/Linked%20Lists/linked%20lists.html
