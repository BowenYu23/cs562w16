@import linkedlist
@import math
@import time

<@
def countLength(head):
	count = 0
	if head==None:
		return count
	while head!=None:
		head=head.next
		count = count + 1
	return count
@>	

source: linkedlist.py

pool: <INT> 3
pool: <CHAR> 3
pool: <LINKED> 3
pool: <LIST> 3

<INT>:=<[1..20]>
<CHAR> := <['a','b','c','d','*','hello good',1,1.3333333,1000000]>
<LIST>:=[]
~<LIST>.append(<INT>)

<LINKED>:=linkedlist.linkedList()

#insert int type numbers
<LINKED>.insert(<CHAR>) 
#<LINKED>.insert(<INT>) 
#=> \
#   (countLength(<LINKED,1>.getHead())==pre<(countLength(<LINKED,1>.getHead()))>+1)

#countLength(~<LINKED,1>.getHead()) <5 -> ~<LINKED,1>.ReversePrint(<LINKED>.getHead())
countLength(~<LINKED,1>.getHead()) == 5 -> <LINKED,1>.printList(<LINKED>.getHead()); ~<LINKED,1>.ReversePrint(<LINKED,1>.getHead())
#print "**********************"

#test the function deleteDuplicates
#~<LINKED>.printList(~<LINKED>.deleteDuplicates(~<LINKED>.getHead()))

