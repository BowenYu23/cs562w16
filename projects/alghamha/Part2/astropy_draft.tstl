
@from astropy.table import Table, Column

<@
def	check_unit_tstl(t):

	Random_column_Unit=(''.join(random.choice(ascii_uppercase) for i in range(1)))
	Random_column_Name=(''.join(random.choice(ascii_uppercase) for i in range(2)))
	Random_description= (''.join(random.choice(ascii_uppercase) for i in range(12)))
	random_int= random.randint(0,9)
	random_int2= random.randint(0,9)
	random_int3= random.randint(0,9)
	t[Random_column_Name]= Column([random_int,random_int2,random_int3], unit= Random_column_Unit, description=Random_description)


	assert Random_column_Unit == t[Random_column_Name].unit

	print(t)
	
	print 'Pass test for adding column: ', t[Random_column_Name]
	return t[Random_column_Name].unit

#def test_after_reduce(sut):
#	sut.setlog(0)
@>

 
pool: <int> 3 
pool: <table> 3
pool: <list> 4
pool: <string> 3
pool: <char> 3

#log: 1 <table> 
#log: POST 1 <table> 

# initilize an empty table
<table> := Table()


#Actions
<int> := <[0..10]> 
<char> := <['a','b','c','d']>
<string> := ''
~<string> = ~<string> + <char>
~<list> := []
~<list>.append(<int>)

# add columns
<table>[<string>] := Column(<list>, unit= <string>, description=<string>)


#properties: 
# properties are invariants to check after each step of testing
property: check_unit_tstl(<table>)


#actions: 
#	<int> := <[0..10]> 
#	<int> = <int> + 1 
#	<int> = <int> - 1 

